{"ast":null,"code":"var _jsxFileName = \"/Users/vidhya-v/Desktop/Academy/React_capstone/stay-organized-react/src/Components/TaskListContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TaskListContext = /*#__PURE__*/createContext();\nexport const TaskListProvider = ({\n  children\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    // Fetch tasks for the initial user or default user\n    fetchTasks(1);\n  }, []);\n  const fetchTasks = userId => {\n    fetch(`http://localhost:8083/api/todos/byuser/${userId}`).then(response => response.json()).then(data => setTasks(data)).catch(err => console.error('Error fetching todos:', err));\n  };\n  const addTask = task => {\n    fetch(`http://localhost:8083/api/todos`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    }).then(response => response.json()).then(newTask => setTasks([...tasks, newTask])).catch(err => console.error('Error adding task:', err));\n  };\n  const checkTask = taskId => {\n    const task = tasks.find(t => t.id === taskId);\n    if (task) {\n      const updatedTask = {\n        ...task,\n        completed: !task.completed\n      };\n      fetch(`http://localhost:8083/api/todos/${taskId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedTask)\n      }).then(() => {\n        setTasks(tasks.map(t => t.id === taskId ? updatedTask : t));\n      }).catch(err => console.error('Error updating task:', err));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(TaskListContext.Provider, {\n    value: {\n      tasks,\n      fetchTasks,\n      addTask,\n      checkTask\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskListProvider, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskListProvider;\nvar _c;\n$RefreshReg$(_c, \"TaskListProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","TaskListContext","TaskListProvider","children","_s","tasks","setTasks","fetchTasks","userId","fetch","then","response","json","data","catch","err","console","error","addTask","task","method","headers","body","JSON","stringify","newTask","checkTask","taskId","find","t","id","updatedTask","completed","map","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vidhya-v/Desktop/Academy/React_capstone/stay-organized-react/src/Components/TaskListContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const TaskListContext = createContext();\n\nexport const TaskListProvider = ({ children }) => {\n    const [tasks, setTasks] = useState([]);\n\n    useEffect(() => {\n        // Fetch tasks for the initial user or default user\n        fetchTasks(1);\n    }, []);\n\n    const fetchTasks = (userId) => {\n        fetch(`http://localhost:8083/api/todos/byuser/${userId}`)\n            .then(response => response.json())\n            .then(data => setTasks(data))\n            .catch(err => console.error('Error fetching todos:', err));\n    };\n\n    const addTask = (task) => {\n        fetch(`http://localhost:8083/api/todos`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(task)\n        })\n            .then(response => response.json())\n            .then(newTask => setTasks([...tasks, newTask]))\n            .catch(err => console.error('Error adding task:', err));\n    };\n\n    const checkTask = (taskId) => {\n        const task = tasks.find(t => t.id === taskId);\n        if (task) {\n            const updatedTask = { ...task, completed: !task.completed };\n            fetch(`http://localhost:8083/api/todos/${taskId}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(updatedTask)\n            })\n                .then(() => {\n                    setTasks(tasks.map(t => t.id === taskId ? updatedTask : t));\n                })\n                .catch(err => console.error('Error updating task:', err));\n        }\n    };\n\n    return (\n        <TaskListContext.Provider value={{ tasks, fetchTasks, addTask, checkTask }}>\n            {children}\n        </TaskListContext.Provider>\n    );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,eAAe,gBAAGL,aAAa,CAAC,CAAC;AAE9C,OAAO,MAAMM,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ;IACAS,UAAU,CAAC,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAIC,MAAM,IAAK;IAC3BC,KAAK,CAAC,0CAA0CD,MAAM,EAAE,CAAC,CACpDE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIP,QAAQ,CAACO,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC,CAAC;EAClE,CAAC;EAED,MAAMG,OAAO,GAAIC,IAAI,IAAK;IACtBV,KAAK,CAAC,iCAAiC,EAAE;MACrCW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;IAC7B,CAAC,CAAC,CACGT,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACe,OAAO,IAAInB,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEoB,OAAO,CAAC,CAAC,CAAC,CAC9CX,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEF,GAAG,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMW,SAAS,GAAIC,MAAM,IAAK;IAC1B,MAAMR,IAAI,GAAGd,KAAK,CAACuB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKH,MAAM,CAAC;IAC7C,IAAIR,IAAI,EAAE;MACN,MAAMY,WAAW,GAAG;QAAE,GAAGZ,IAAI;QAAEa,SAAS,EAAE,CAACb,IAAI,CAACa;MAAU,CAAC;MAC3DvB,KAAK,CAAC,mCAAmCkB,MAAM,EAAE,EAAE;QAC/CP,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACO,WAAW;MACpC,CAAC,CAAC,CACGrB,IAAI,CAAC,MAAM;QACRJ,QAAQ,CAACD,KAAK,CAAC4B,GAAG,CAACJ,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKH,MAAM,GAAGI,WAAW,GAAGF,CAAC,CAAC,CAAC;MAC/D,CAAC,CAAC,CACDf,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC,CAAC;IACjE;EACJ,CAAC;EAED,oBACIf,OAAA,CAACC,eAAe,CAACiC,QAAQ;IAACC,KAAK,EAAE;MAAE9B,KAAK;MAAEE,UAAU;MAAEW,OAAO;MAAEQ;IAAU,CAAE;IAAAvB,QAAA,EACtEA;EAAQ;IAAAiC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAEnC,CAAC;AAACnC,EAAA,CAnDWF,gBAAgB;AAAAsC,EAAA,GAAhBtC,gBAAgB;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}