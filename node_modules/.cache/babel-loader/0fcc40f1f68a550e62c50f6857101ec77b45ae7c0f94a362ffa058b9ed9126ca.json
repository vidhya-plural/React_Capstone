{"ast":null,"code":"var _jsxFileName = \"/Users/vidhya-v/Desktop/Academy/React_capstone/stay-organized-react/src/Components/ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useEffect, useState } from 'react';\nimport ToDo from './Todo';\n\n// Reducer function to manage state transitions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TASK':\n      return {\n        ...state,\n        userTasks: [...state.userTasks, action.payload]\n      };\n    case 'REMOVE_TASK':\n      return {\n        ...state,\n        userTasks: state.userTasks.filter(task => task.id !== action.payload)\n      };\n    case 'EDIT_TASK':\n      return {\n        ...state,\n        userTasks: state.userTasks.map(task => task.id === action.payload.id ? action.payload : task)\n      };\n    case 'SET_USERS':\n      return {\n        ...state,\n        users: action.payload\n      };\n    case 'SET_USER_TASKS':\n      return {\n        ...state,\n        userTasks: action.payload\n      };\n    default:\n      return state;\n  }\n};\nconst ToDoList = () => {\n  _s();\n  const initialState = {\n    input: '',\n    users: [],\n    // New state to hold fetched usernames\n    userTasks: [] // New state to hold tasks of the selected user\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [input, setInput] = useState(initialState.input);\n  const [selectedUser, setSelectedUser] = useState('');\n  const [editTask, setEditTask] = useState(null);\n  useEffect(() => {\n    // Fetch usernames from API\n    fetch('http://localhost:8083/api/users').then(response => response.json()).then(data => {\n      dispatch({\n        type: 'SET_USERS',\n        payload: data\n      });\n    }).catch(error => console.error('Error fetching users:', error));\n  }, []);\n  const handleAdd = () => {\n    if (!input || !selectedUser) return;\n    const newTask = {\n      userid: selectedUser,\n      description: input,\n      category: \"General\",\n      // Default category, can be modified as needed\n      deadline: \"2024-12-31\",\n      // Default deadline, can be modified as needed\n      priority: \"Medium\",\n      // Default priority, can be modified as needed\n      completed: false\n    };\n\n    // Assuming the backend expects a POST request to add a new task\n    fetch(`http://localhost:8083/api/todos`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newTask)\n    }).then(response => response.json()).then(data => {\n      dispatch({\n        type: 'ADD_TASK',\n        payload: data\n      });\n      setInput('');\n    }).catch(err => {\n      console.error('Error adding task:', err);\n    });\n  };\n  const handleRemove = id => {\n    // Assuming the backend expects a DELETE request to remove a task\n    fetch(`http://localhost:8083/api/todos/${id}`, {\n      method: 'DELETE'\n    }).then(() => {\n      dispatch({\n        type: 'REMOVE_TASK',\n        payload: id\n      });\n    }).catch(err => {\n      console.error('Error removing task:', err);\n    });\n  };\n  const handleEdit = () => {\n    if (!editTask || !editTask.description) return;\n\n    // Assuming the backend expects a PUT request to update a task\n    fetch(`http://localhost:8083/api/todos/${editTask.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(editTask)\n    }).then(response => response.json()).then(data => {\n      dispatch({\n        type: 'EDIT_TASK',\n        payload: data\n      });\n      setEditTask(null);\n      setInput('');\n    }).catch(err => {\n      console.error('Error editing task:', err);\n    });\n  };\n  const handleUserChange = e => {\n    const userId = e.target.value;\n    setSelectedUser(userId);\n    if (userId) {\n      fetch(`http://localhost:8083/api/todos/byuser/${userId}`).then(response => response.json()).then(data => {\n        dispatch({\n          type: 'SET_USER_TASKS',\n          payload: data\n        });\n      }).catch(err => {\n        console.error('Error fetching todos:', err);\n      });\n    } else {\n      dispatch({\n        type: 'SET_USER_TASKS',\n        payload: []\n      });\n    }\n  };\n  const handleEditChange = e => {\n    setEditTask({\n      ...editTask,\n      description: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TODO List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Task below\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: input,\n      onChange: e => setInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAdd,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), editTask && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: editTask.description,\n        onChange: handleEditChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEdit,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedUser,\n      onChange: handleUserChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), state.users.map((user, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: user.id,\n        children: user.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: state.userTasks.map(task => /*#__PURE__*/_jsxDEV(ToDo, {\n        task: task,\n        handleToggle: () => dispatch({\n          type: 'TOGGLE_TASK',\n          payload: task.id\n        }),\n        handleRemove: () => handleRemove(task.id),\n        handleEdit: () => setEditTask(task)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), state.userTasks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"todo-cards\",\n      children: state.userTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Category: \", task.category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Deadline: \", task.deadline]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Priority: \", task.priority]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Completed: \", task.completed ? 'Yes' : 'No']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 29\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 9\n  }, this);\n};\n_s(ToDoList, \"nXzRGjWeerPR+Kv/4bavNBQNQaA=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useReducer","useEffect","useState","ToDo","jsxDEV","_jsxDEV","reducer","state","action","type","userTasks","payload","filter","task","id","map","users","ToDoList","_s","initialState","input","dispatch","setInput","selectedUser","setSelectedUser","editTask","setEditTask","fetch","then","response","json","data","catch","error","console","handleAdd","newTask","userid","description","category","deadline","priority","completed","method","headers","body","JSON","stringify","err","handleRemove","handleEdit","handleUserChange","e","userId","target","value","handleEditChange","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","user","index","name","handleToggle","length","className","_c","$RefreshReg$"],"sources":["/Users/vidhya-v/Desktop/Academy/React_capstone/stay-organized-react/src/Components/ToDoList.js"],"sourcesContent":["import React, { useReducer, useEffect, useState } from 'react';\nimport ToDo from './Todo';\n\n// Reducer function to manage state transitions\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'ADD_TASK':\n            return {\n                ...state,\n                userTasks: [...state.userTasks, action.payload]\n            };\n        case 'REMOVE_TASK':\n            return {\n                ...state,\n                userTasks: state.userTasks.filter(task => task.id !== action.payload)\n            };\n        case 'EDIT_TASK':\n            return {\n                ...state,\n                userTasks: state.userTasks.map(task =>\n                    task.id === action.payload.id ? action.payload : task\n                )\n            };\n        case 'SET_USERS':\n            return {\n                ...state,\n                users: action.payload\n            };\n        case 'SET_USER_TASKS':\n            return {\n                ...state,\n                userTasks: action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nconst ToDoList = () => {\n    const initialState = {\n        input: '',\n        users: [], // New state to hold fetched usernames\n        userTasks: [] // New state to hold tasks of the selected user\n    };\n\n    const [state, dispatch] = useReducer(reducer, initialState);\n    const [input, setInput] = useState(initialState.input);\n    const [selectedUser, setSelectedUser] = useState('');\n    const [editTask, setEditTask] = useState(null);\n\n    useEffect(() => {\n        // Fetch usernames from API\n        fetch('http://localhost:8083/api/users')\n            .then(response => response.json())\n            .then(data => {\n                dispatch({ type: 'SET_USERS', payload: data });\n            })\n            .catch(error => console.error('Error fetching users:', error));\n    }, []);\n\n    const handleAdd = () => {\n        if (!input || !selectedUser) return;\n        const newTask = {\n            userid: selectedUser,\n            description: input,\n            category: \"General\", // Default category, can be modified as needed\n            deadline: \"2024-12-31\", // Default deadline, can be modified as needed\n            priority: \"Medium\", // Default priority, can be modified as needed\n            completed: false\n        };\n\n        // Assuming the backend expects a POST request to add a new task\n        fetch(`http://localhost:8083/api/todos`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(newTask)\n        })\n            .then(response => response.json())\n            .then(data => {\n                dispatch({ type: 'ADD_TASK', payload: data });\n                setInput('');\n            })\n            .catch(err => {\n                console.error('Error adding task:', err);\n            });\n    };\n\n    const handleRemove = (id) => {\n        // Assuming the backend expects a DELETE request to remove a task\n        fetch(`http://localhost:8083/api/todos/${id}`, {\n            method: 'DELETE'\n        })\n            .then(() => {\n                dispatch({ type: 'REMOVE_TASK', payload: id });\n            })\n            .catch(err => {\n                console.error('Error removing task:', err);\n            });\n    };\n\n    const handleEdit = () => {\n        if (!editTask || !editTask.description) return;\n\n        // Assuming the backend expects a PUT request to update a task\n        fetch(`http://localhost:8083/api/todos/${editTask.id}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(editTask)\n        })\n            .then(response => response.json())\n            .then(data => {\n                dispatch({ type: 'EDIT_TASK', payload: data });\n                setEditTask(null);\n                setInput('');\n            })\n            .catch(err => {\n                console.error('Error editing task:', err);\n            });\n    };\n\n    const handleUserChange = (e) => {\n        const userId = e.target.value;\n        setSelectedUser(userId);\n\n        if (userId) {\n            fetch(`http://localhost:8083/api/todos/byuser/${userId}`)\n                .then(response => response.json())\n                .then(data => {\n                    dispatch({ type: 'SET_USER_TASKS', payload: data });\n                })\n                .catch(err => {\n                    console.error('Error fetching todos:', err);\n                });\n        } else {\n            dispatch({ type: 'SET_USER_TASKS', payload: [] });\n        }\n    };\n\n    const handleEditChange = (e) => {\n        setEditTask({ ...editTask, description: e.target.value });\n    };\n\n    return (\n        <div>\n            <h1>TODO List</h1>\n            <h3>Add Task below</h3>\n            <input value={input} onChange={(e) => setInput(e.target.value)} />\n            <button onClick={handleAdd}>Add</button>\n            {editTask && (\n                <div>\n                    <h3>Edit Task</h3>\n                    <input value={editTask.description} onChange={handleEditChange} />\n                    <button onClick={handleEdit}>Save</button>\n                </div>\n            )}\n            <select value={selectedUser} onChange={handleUserChange}>\n                <option value=\"\">Select User</option>\n                {state.users.map((user, index) => (\n                    <option key={index} value={user.id}>{user.name}</option>\n                ))}\n            </select>\n            <ul>\n                {state.userTasks.map((task) => (\n                    <ToDo\n                        key={task.id}\n                        task={task}\n                        handleToggle={() => dispatch({ type: 'TOGGLE_TASK', payload: task.id })}\n                        handleRemove={() => handleRemove(task.id)}\n                        handleEdit={() => setEditTask(task)}\n                    />\n                ))}\n            </ul>\n            {state.userTasks.length > 0 && (\n                <div id=\"todo-cards\">\n                    {state.userTasks.map((task) => (\n                        <div key={task.id} className=\"todo-card\">\n                            <h3>{task.description}</h3>\n                            <p>Category: {task.category}</p>\n                            <p>Deadline: {task.deadline}</p>\n                            <p>Priority: {task.priority}</p>\n                            <p>Completed: {task.completed ? 'Yes' : 'No'}</p>\n                        </div>\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ToDoList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}