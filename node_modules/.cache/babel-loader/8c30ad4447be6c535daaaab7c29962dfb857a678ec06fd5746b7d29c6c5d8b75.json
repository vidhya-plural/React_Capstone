{"ast":null,"code":"var _jsxFileName = \"/Users/vidhya-v/Desktop/Academy/React_capstone/stay-organized-react/src/Components/NewTodoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewTodoForm = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [userId, setUserId] = useState('');\n  const [category, setCategory] = useState('');\n  const [description, setDescription] = useState('');\n  const [deadline, setDeadline] = useState('');\n  const [priority, setPriority] = useState('Low');\n  const [showTaskDetails, setShowTaskDetails] = useState(false);\n  const [addedTodo, setAddedTodo] = useState(null);\n  const [taskAdded, setTaskAdded] = useState(false); // Track whether task has been added successfully\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Fetch users from the API and populate the user select dropdown\n    fetch(\"http://localhost:8083/api/users\").then(response => response.json()).then(users => {\n      setUsers(users);\n    });\n\n    // Fetch categories from the API and populate the category select dropdown\n    fetch(\"http://localhost:8083/api/categories\").then(response => response.json()).then(categories => {\n      setCategories(categories);\n    });\n  }, []);\n  const addNewTodo = () => {\n    // Construct todo object\n    const todoData = {\n      userId,\n      category,\n      description,\n      deadline,\n      priority,\n      completed: false\n    };\n\n    // Send POST request to the API to add new todo task\n    fetch(\"http://localhost:8083/api/todos\", {\n      method: \"POST\",\n      body: JSON.stringify(todoData),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(response => response.json()).then(todo => {\n      setAddedTodo(todo);\n      setShowTaskDetails(true);\n      setTaskAdded(true); // Set taskAdded to true once task is added successfully\n    });\n  };\n  const handleBackToAddTask = () => {\n    setShowTaskDetails(false);\n  };\n  const handleGotoUserTodos = () => {\n    navigate('/user-todos');\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container container-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Create New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"form-control btn btn-dark\",\n            onClick: addNewTodo,\n            children: \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), taskAdded && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Task added successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(NewTodoForm, \"CgGbJe+Fq1vp03zDs+KM4StdECw=\", false, function () {\n  return [useNavigate];\n});\n_c = NewTodoForm;\nexport default NewTodoForm;\nvar _c;\n$RefreshReg$(_c, \"NewTodoForm\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","NewTodoForm","_s","users","setUsers","categories","setCategories","userId","setUserId","category","setCategory","description","setDescription","deadline","setDeadline","priority","setPriority","showTaskDetails","setShowTaskDetails","addedTodo","setAddedTodo","taskAdded","setTaskAdded","navigate","fetch","then","response","json","addNewTodo","todoData","completed","method","body","JSON","stringify","headers","todo","handleBackToAddTask","handleGotoUserTodos","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["/Users/vidhya-v/Desktop/Academy/React_capstone/stay-organized-react/src/Components/NewTodoForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst NewTodoForm = () => {\n    const [users, setUsers] = useState([]);\n    const [categories, setCategories] = useState([]);\n    const [userId, setUserId] = useState('');\n    const [category, setCategory] = useState('');\n    const [description, setDescription] = useState('');\n    const [deadline, setDeadline] = useState('');\n    const [priority, setPriority] = useState('Low');\n    const [showTaskDetails, setShowTaskDetails] = useState(false);\n    const [addedTodo, setAddedTodo] = useState(null);  \n    const [taskAdded, setTaskAdded] = useState(false); // Track whether task has been added successfully\n\n    const navigate = useNavigate();\n    \n    useEffect(() => {\n        // Fetch users from the API and populate the user select dropdown\n        fetch(\"http://localhost:8083/api/users\")\n            .then(response => response.json())\n            .then(users => {\n                setUsers(users);\n            });\n\n        // Fetch categories from the API and populate the category select dropdown\n        fetch(\"http://localhost:8083/api/categories\")\n            .then(response => response.json())\n            .then(categories => {\n                setCategories(categories);\n            });\n    }, []);\n\n    const addNewTodo = () => {\n        // Construct todo object\n        const todoData = {\n            userId,\n            category,\n            description,\n            deadline,\n            priority,\n            completed: false\n        };\n\n        // Send POST request to the API to add new todo task\n        fetch(\"http://localhost:8083/api/todos\", {\n            method: \"POST\",\n            body: JSON.stringify(todoData),\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n        })\n        .then(response => response.json())\n        .then(todo => {\n            setAddedTodo(todo); \n            setShowTaskDetails(true); \n            setTaskAdded(true); // Set taskAdded to true once task is added successfully\n        });\n    };\n\n    const handleBackToAddTask = () => {\n        setShowTaskDetails(false);\n    };\n\n    const handleGotoUserTodos = () => {\n        navigate('/user-todos');\n    };\n\n    return (\n        <main>\n            <div className=\"container container-form\">\n                <h4>Create New Task</h4>\n                <form>\n                    {/* Your form elements */}\n                    <div className=\"mb-3\">\n                        <button type=\"button\" className=\"form-control btn btn-dark\" onClick={addNewTodo}>Add Task</button>\n                    </div>\n                </form>\n                {/* Show success message if taskAdded is true */}\n                {taskAdded && <p>Task added successfully</p>}\n                {/* Your card to display added task details */}\n                {/* Your card to display added task details */}\n            </div>\n        </main>\n    );\n};\n\nexport default NewTodoForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}