{"ast":null,"code":"var _jsxFileName = \"/Users/vidhya-v/Desktop/Academy/React_capstone/stay-organized-react/src/Components/Sidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [counts, setCounts] = useState({\n    completed: 0,\n    pending: 0,\n    high: 0,\n    medium: 0,\n    low: 0,\n    personal: 0,\n    household: 0,\n    financial: 0,\n    work: 0,\n    errand: 0,\n    help: 0,\n    total: 0\n  });\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchCategories();\n    fetchTodos();\n  }, []);\n  const fetchCategories = async () => {\n    try {\n      const response = await fetch('http://localhost:8083/api/categories');\n      const data = await response.json();\n      setCategories(data);\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n    }\n  };\n  const fetchTodos = async () => {\n    try {\n      const response = await fetch('http://localhost:8083/api/todos');\n      const data = await response.json();\n      calculateCounts(data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n      setLoading(false);\n    }\n  };\n  const calculateCounts = todos => {\n    const counts = {\n      completed: 0,\n      pending: 0,\n      high: 0,\n      medium: 0,\n      low: 0,\n      personal: 0,\n      household: 0,\n      financial: 0,\n      work: 0,\n      errand: 0,\n      help: 0,\n      total: 0\n    };\n    todos.forEach(todo => {\n      if (todo.completed) {\n        counts.completed++;\n      } else {\n        counts.pending++;\n      }\n      switch (todo.priority.toLowerCase()) {\n        case 'high':\n          counts.high++;\n          break;\n        case 'medium':\n          counts.medium++;\n          break;\n        case 'low':\n          counts.low++;\n          break;\n        default:\n          break;\n      }\n      switch (todo.category.toLowerCase()) {\n        case 'personal task':\n          counts.personal++;\n          break;\n        case 'household task':\n          counts.household++;\n          break;\n        case 'financial task':\n          counts.financial++;\n          break;\n        case 'work task':\n          counts.work++;\n          break;\n        case 'errand':\n          counts.errand++;\n          break;\n        case 'help others':\n          counts.help++;\n          break;\n        default:\n          break;\n      }\n      counts.total++;\n    });\n    setCounts(counts);\n  };\n  const getCategoryCount = categoryName => {\n    switch (categoryName.toLowerCase()) {\n      case 'personal task':\n        return counts.personal;\n      case 'household task':\n        return counts.household;\n      case 'financial task':\n        return counts.financial;\n      case 'work task':\n        return counts.work;\n      case 'errand':\n        return counts.errand;\n      case 'help others':\n        return counts.help;\n      default:\n        return 0;\n    }\n  };\n  const getCategoryCountColor = count => {\n    if (count === 0) {\n      return '#28a745'; // Grey color for zero count\n    } else if (count < 5) {\n      return '#ff5733'; // Orange color for counts less than 5\n    } else if (count < 10) {\n      return '#ffc300'; // Yellow color for counts between 5 and 10\n    } else {\n      return '#d1d1d1'; // Green color for counts greater than or equal to 10\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidenav\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"8bxfSPy2+JITkLUmFSlAildrs8s=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useEffect","useState","Link","jsxDEV","_jsxDEV","Sidebar","_s","categories","setCategories","counts","setCounts","completed","pending","high","medium","low","personal","household","financial","work","errand","help","total","loading","setLoading","fetchCategories","fetchTodos","response","fetch","data","json","error","console","calculateCounts","todos","forEach","todo","priority","toLowerCase","category","getCategoryCount","categoryName","getCategoryCountColor","count","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/vidhya-v/Desktop/Academy/React_capstone/stay-organized-react/src/Components/Sidebar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport { Link } from 'react-router-dom';\n\nconst Sidebar = () => {\n  const [categories, setCategories] = useState([]);\n  const [counts, setCounts] = useState({\n    completed: 0,\n    pending: 0,\n    high: 0,\n    medium: 0,\n    low: 0,\n    personal: 0,\n    household: 0,\n    financial: 0,\n    work: 0,\n    errand: 0,\n    help: 0,\n    total: 0\n  });\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchCategories();\n    fetchTodos();\n  }, []);\n\n  const fetchCategories = async () => {\n    try {\n      const response = await fetch('http://localhost:8083/api/categories');\n      const data = await response.json();\n      setCategories(data);\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n    }\n  };\n\n  const fetchTodos = async () => {\n    try {\n      const response = await fetch('http://localhost:8083/api/todos');\n      const data = await response.json();\n      calculateCounts(data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n      setLoading(false);\n    }\n  };\n\n  const calculateCounts = (todos) => {\n    const counts = {\n      completed: 0,\n      pending: 0,\n      high: 0,\n      medium: 0,\n      low: 0,\n      personal: 0,\n      household: 0,\n      financial: 0,\n      work: 0,\n      errand: 0,\n      help: 0,\n      total: 0\n    };\n\n    todos.forEach(todo => {\n      if (todo.completed) {\n        counts.completed++;\n      } else {\n        counts.pending++;\n      }\n\n      switch (todo.priority.toLowerCase()) {\n        case 'high':\n          counts.high++;\n          break;\n        case 'medium':\n          counts.medium++;\n          break;\n        case 'low':\n          counts.low++;\n          break;\n        default:\n          break;\n      }\n\n      switch (todo.category.toLowerCase()) {\n        case 'personal task':\n          counts.personal++;\n          break;\n        case 'household task':\n          counts.household++;\n          break;\n        case 'financial task':\n          counts.financial++;\n          break;\n        case 'work task':\n          counts.work++;\n          break;\n        case 'errand':\n          counts.errand++;\n          break;\n        case 'help others':\n          counts.help++;\n          break;\n        default:\n          break;\n      }\n\n      counts.total++;\n    });\n\n    setCounts(counts);\n  };\n\n  const getCategoryCount = (categoryName) => {\n    switch (categoryName.toLowerCase()) {\n      case 'personal task':\n        return counts.personal;\n      case 'household task':\n        return counts.household;\n      case 'financial task':\n        return counts.financial;\n      case 'work task':\n        return counts.work;\n      case 'errand':\n        return counts.errand;\n      case 'help others':\n        return counts.help;\n      default:\n        return 0;\n    }\n  };\n\n  const getCategoryCountColor = (count) => {\n    if (count === 0) {\n      return '#28a745'; // Grey color for zero count\n    } else if (count < 5) {\n      return '#ff5733'; // Orange color for counts less than 5\n    } else if (count < 10) {\n      return '#ffc300'; // Yellow color for counts between 5 and 10\n    } else {\n      return '#d1d1d1'; // Green color for counts greater than or equal to 10\n    }\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"sidenav\">\n      {/* ... existing code ... */}\n    </div>\n  );\n};\n\nexport default Sidebar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}