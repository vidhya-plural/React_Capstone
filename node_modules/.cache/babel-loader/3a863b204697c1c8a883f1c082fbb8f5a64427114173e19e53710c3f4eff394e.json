{"ast":null,"code":"var _jsxFileName = \"/Users/vidhya-v/Desktop/Academy/React_capstone/stay-organized-react/src/ToDoList_youtube.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useEffect, useState } from 'react';\nimport ToDo from './Todo';\n\n// Reducer function to manage state transitions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TASK':\n      return {\n        ...state,\n        tasks: [...state.tasks, {\n          taskName: action.payload,\n          completed: false\n        }]\n      };\n    case 'REMOVE_TASK':\n      return {\n        ...state,\n        tasks: state.tasks.filter((_, index) => index !== action.payload)\n      };\n    case 'TOGGLE_TASK':\n      return {\n        ...state,\n        tasks: state.tasks.map((task, index) => index === action.payload ? {\n          ...task,\n          completed: !task.completed\n        } : task)\n      };\n    case 'RESET_TASKS':\n      return {\n        ...state,\n        tasks: []\n      };\n    default:\n      return state;\n  }\n};\nconst ToDoList = () => {\n  _s();\n  const initialState = {\n    input: '',\n    tasks: JSON.parse(localStorage.getItem('tasks')) || []\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [input, setInput] = useState(initialState.input);\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(state.tasks));\n  }, [state.tasks]);\n  const handleAdd = () => {\n    if (!input) return;\n    dispatch({\n      type: 'ADD_TASK',\n      payload: input\n    });\n    setInput('');\n  };\n  const handleRemove = index => {\n    dispatch({\n      type: 'REMOVE_TASK',\n      payload: index\n    });\n  };\n  const handleToggle = index => {\n    dispatch({\n      type: 'TOGGLE_TASK',\n      payload: index\n    });\n  };\n  const handleReset = () => {\n    dispatch({\n      type: 'RESET_TASKS'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TODO List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Task below\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: input,\n      onChange: e => setInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAdd,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), state.tasks.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 40\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: state.tasks.map((task, index) => /*#__PURE__*/_jsxDEV(ToDo, {\n        index: index,\n        task: task,\n        handleToggle: handleToggle,\n        handleRemove: handleRemove\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(ToDoList, \"r7KshCxReLTsaQ3nX5/xjIdFvw0=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useReducer","useEffect","useState","ToDo","jsxDEV","_jsxDEV","reducer","state","action","type","tasks","taskName","payload","completed","filter","_","index","map","task","ToDoList","_s","initialState","input","JSON","parse","localStorage","getItem","dispatch","setInput","setItem","stringify","handleAdd","handleRemove","handleToggle","handleReset","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","length","_c","$RefreshReg$"],"sources":["/Users/vidhya-v/Desktop/Academy/React_capstone/stay-organized-react/src/ToDoList_youtube.js"],"sourcesContent":["import React, { useReducer, useEffect, useState } from 'react';\nimport ToDo from './Todo';\n\n\n// Reducer function to manage state transitions\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'ADD_TASK':\n            return {\n                ...state,\n                tasks: [...state.tasks, { taskName: action.payload, completed: false }]\n            };\n        case 'REMOVE_TASK':\n            return {\n                ...state,\n                tasks: state.tasks.filter((_, index) => index !== action.payload)\n            };\n        case 'TOGGLE_TASK':\n            return {\n                ...state,\n                tasks: state.tasks.map((task, index) =>\n                    index === action.payload ? { ...task, completed: !task.completed } : task\n                )\n            };\n        case 'RESET_TASKS':\n            return {\n                ...state,\n                tasks: []\n            };\n        default:\n            return state;\n    }\n};\n\nconst ToDoList = () => {\n    const initialState = {\n        input: '',\n        tasks: JSON.parse(localStorage.getItem('tasks')) || []\n    };\n\n    const [state, dispatch] = useReducer(reducer, initialState);\n    const [input, setInput] = useState(initialState.input);\n\n    useEffect(() => {\n        localStorage.setItem('tasks', JSON.stringify(state.tasks));\n    }, [state.tasks]);\n\n    const handleAdd = () => {\n        if (!input) return;\n        dispatch({ type: 'ADD_TASK', payload: input });\n        setInput('');\n    };\n\n    const handleRemove = (index) => {\n        dispatch({ type: 'REMOVE_TASK', payload: index });\n    };\n\n    const handleToggle = (index) => {\n        dispatch({ type: 'TOGGLE_TASK', payload: index });\n    };\n\n    const handleReset = () => {\n        dispatch({ type: 'RESET_TASKS' });\n    };\n\n    return (\n        <div>\n            <h1>TODO List</h1>\n            <h3>Add Task below</h3>\n            <input value={input} onChange={(e) => setInput(e.target.value)} />\n            <button onClick={handleAdd} >Add</button>\n            {state.tasks.length > 0 && <button onClick={handleReset}>Reset</button>}\n            <ul>\n                {state.tasks.map((task, index) => (\n                    <ToDo\n                        key={index}\n                        index={index}\n                        task={task}\n                        handleToggle={handleToggle}\n                        handleRemove={handleRemove}\n                    />\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default ToDoList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}